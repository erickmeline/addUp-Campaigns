{"version":3,"sources":["util/FetchData.js","Components/App/RowData.jsx","Components/App/App.jsx","index.js"],"names":["FetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","headers","response","data","wrap","_context","prev","next","Accept","Content-Type","fetch","sent","ok","json","abrupt","t0","text","stop","_x","apply","this","arguments","endpoint","RowData","props","campaign","club_id_name","title","c_code","gau_id","publish_status","salesforce_id","slug","actions","created_by","start_date","end_date","forEach","obj","hasOwnProperty","react_default","createElement","href","concat","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","campaigns","slugs","_this2","then","push","setState","_this3","promises","map","Promise","all","results","cleanResults","_this$state","length","getCampaigns","className","colSpan","App_RowData","key","id","React","Component","ReactDOM","render","Components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.18ec54f3.chunk.js","sourcesContent":["const FetchData = async (url) => {\n\tconst headers = {\n\t\t'Accept': 'application/json',\n\t\t'Content-Type': 'application/json'\n\t}\n\tconst response = await fetch(url, headers);\n\tif (!response.ok) {\n\t\tthrow response\n\t}\n\ttry {\n\t\tconst data = await response.json();\n\t\treturn data;\n\t}\n\tcatch (error) {\n\t\tthrow error.text() || 'Uncaught Fetch Error Occured'\n\t}\n}\n\nexport default FetchData;\n","import React from 'react';\n\nconst endpoint = 'https://addup.sierraclub.org/api/v1/campaigns';\n\nconst RowData = props => {\n\tconst { campaign } = props;\n\tlet { \n\t\tclub_id_name, \n\t\ttitle, \n\t\tc_code, \n\t\tgau_id, \n\t\tpublish_status, \n\t\tsalesforce_id, \n\t\tslug, \n\t\tactions, \n\t\tcreated_by,\n\t\tstart_date,\n\t\tend_date\n\t} = campaign;\n\tactions.forEach((obj) => {\n\t\tif(obj.hasOwnProperty('gau_id')) {\n\t\t\tgau_id = obj.gau_id;\n\t\t\tc_code = obj.c_code;\n\t\t}\n\t});\n\n\treturn (\n\t\t<tr>\n\t\t\t<td>{created_by || 'n/a'}</td>\n\t\t\t<td>{title || 'n/a'}</td>\n\t\t\t<td>{gau_id || 'n/a'}</td>\n\t\t\t<td>{publish_status || 'n/a'}</td>\n\t\t\t<td><a href={`${endpoint}/${slug}`}>{`${endpoint}/${slug}`}</a></td>\n\t\t\t<td>{club_id_name || 'n/a'}</td>\n\t\t\t<td>{start_date || 'n/a'}</td>\n\t\t\t<td>{end_date || 'n/a'}</td>\n\t\t\t<td>{c_code || 'n/a'}</td>\n\t\t\t<td>{salesforce_id || 'n/a'}</td>\n\t\t</tr>\n\t)\n}\n\nexport default RowData;\n","import React from 'react';\nimport FetchData from '../../util/FetchData.js';\nimport RowData from './RowData.jsx';\n\nlet endpoint = 'https://addup.sierraclub.org/api/v1/campaigns';\nlet url = endpoint; // local testing data\n// url = './campaigns.json'; // local testing data\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcampaigns: [],\n\t\t\tslugs: []\n\t\t};\n\t}\n\n\tcomponentWillMount() {\n\t\tFetchData(url).then(response => {\n\t\t\treturn response.data;\n\t\t}).then((data) => {\n\t\t\tconst slugs = [];\n\t\t\tdata.forEach(campaign => {\n\t\t\t\tslugs.push(campaign.slug);\n\t\t\t})\n\t\t\tthis.setState({slugs: slugs})\n\t\t});\n\t}\n\n\tgetCampaigns() {\n\t\tconst { slugs } = this.state;\n\t\tconst promises = slugs.map(slug => FetchData(endpoint+'/'+slug).then(response => response.data));\n\t\tPromise.all(promises).then(results => {\n\t\t\tconst cleanResults = results.map((campaign) => {\n\t\t\t\tif (campaign) return campaign\n\t\t\t})\n\t\t\tthis.setState({campaigns: cleanResults})\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { slugs, campaigns } = this.state;\n\t\tif (slugs.length > 0 && campaigns.length < 1) {\n\t\t\tthis.getCampaigns();\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header>Current AddUp Campaigns</header>\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Organizer</th>\n\t\t\t\t\t\t\t<th>Title</th>\n\t\t\t\t\t\t\t<th>GAU</th>\n\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t<th>Link</th>\n\t\t\t\t\t\t\t<th>Club Entity</th>\n\t\t\t\t\t\t\t<th>Start Date</th>\n\t\t\t\t\t\t\t<th>End Date</th>\n\t\t\t\t\t\t\t<th>C3 / C4</th>\n\t\t\t\t\t\t\t<th>SF ID</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcampaigns.length < 1 ? <tr><td colSpan=\"10\"><div className=\"loading\"/></td></tr> : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.campaigns.map(campaign => {\n\t\t\t\t\t\t\t\treturn <RowData campaign={campaign} key={campaign.id} />\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}